$connected = false;

/// Handler for the F5 keyboard button, to call our own refresh function (that does not logout the user !)
$(document).keydown(function(e) {
	if (e.which == 116) { // key code of the F5 button
		if ($connected) {
			refresh();
			e.which = 0;
			return false;
		}
	}
}); 


/// Functions for the login window :
	$(function() { $("button").button(); });

	$(function() {
	  
	 
		
	$.ajax({
		url: "?ajax=true&action=recoversession",
		type: "post",
		success: function(data){
		  
		      if(data['auth']=="false"){
			loginForm();
		      } else if(data['auth']="true"){
			userConnect(data['login'], data['password']);
// 			//hostgroups(1);
			//farm(2);
			//ldapConfig(true); // --> Pruebas
			//statSettings();   //--> Pruebas
			//manageMailing();
			//changePassword();
			//seeAllHostGroups();
			//seeAllStats();
			//seeLogs(); 
			//manageHosts();
			//manageUsers();
			//usergroups(1);
			//managePermissions();
			//schedule();
		      }
		},
		dataType: 'json'
    
	    });
	
	 });

/**
 * Opens a dialog window with a form for the user, to enter his email address.
 * Sends this address to the server that will send him an email with a new password generated for him.
 * Calls the action forgotpass
 * Uses the template "forgotPasswordForm.html"
 * @function
 */

function loginForm(){
  
 var name = $( "#name" ),
 
			password = $( "#password" ),
			allFields = $( [] ).add( name ).add( password ),
			tips = $( ".validateTips" );

		function updateTips( t ) {
			tips
				.text( t )
				.addClass( "ui-state-highlight" );
			setTimeout(function() {
				tips.removeClass( "ui-state-highlight", 1500 );
			}, 500 );
		}

		function checkLength( o, n, min, max ) {
			if ( o.val().length > max || o.val().length < min ) {
				o.addClass( "ui-state-error" );
				updateTips( "Length of " + n + " must be between " +
					min + " and " + max + "." );
				return false;
			} else {
				return true;
			}
		}

		function checkRegexp( o, regexp, n ) {
			if ( !( regexp.test( o.val() ) ) ) {
				o.addClass( "ui-state-error" );
				updateTips( n );
				return false;
			} else {
				return true;
			}
		}
		
		/*Logging Form*/
		
		$( "#connect-form" ).dialog({
			autoOpen: true,
			height: 300,
			width: 350,
			modal: true,
			
			open: function(){
				$(".ui-dialog-titlebar-close").hide(); /*Hide Close Option (X)*/
			},
			
			buttons: {
				"Connect": function() {
					
					var bValid = true;
					allFields.removeClass( "ui-state-error" );
					
					bValid = bValid && checkLength( name, "username", 2, 16 );
					bValid = bValid && checkLength( password, "password", 1, 16 );

					bValid = bValid && checkRegexp( name, /^[a-z]([0-9a-z_])+$/i, "Username may consist of a-z, 0-9, underscores, begin with a letter." );
					bValid = bValid && checkRegexp( password, /^([0-9a-zA-Z])+$/, "Password field only allow : a-z 0-9" );
	
					if ( bValid ) {
						userConnect(name.val(), password.val());
						$( this ).dialog( "close" );
						$( "#forgotpass" ).dialog("open");
					}
				},
				"Forgot password": function() {
					$( this ).dialog( "close" );
					forgotPass();
				},
			},
			close: function() {
				allFields.val( "" ).removeClass( "ui-state-error" );
			}
		});
}
function forgotPass(){
	$.get('templates/forgotPasswordForm.html', function(data) {
		$("#forgotpass").remove();
		$('#content').append( $.tmpl(data, null) );
		
		//
		$( "#forgotpass" ).dialog({
			autoOpen: false,
			height: 300,
			width: 350,
			modal: true,
			buttons: {
				"OK" : function () {
					var email = $("input#mailpass").val();
					var regexpEmail = /^([a-zA-Z0-9_\.\-\+])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
					if (! regexpEmail.test(email)) {
     	   	  		$("#error").html("<p>Please, enter a valid email adress</p>"); return false;
     	     		} else {
  	     				$.ajax({
 							url: "?ajax=true&action=forgotpass",
 							type: 'post',
 							data: "&emailOfUser=" + encodeURIComponent(email),
							success :function (data) {
								if (data["return"]) {
									alert("A new password has been generated and sent at your email address.");
								} else {
									if (data.hasOwnProperty('error')) {
										alert (data["error"]);
									} else {
										alert("Sorry, this email is not in the database. Try again or contact the admin.");	
									}
								}
								$( this ).dialog( "close" );
							},
							dataType: 'json'
						});
     	     		}
				},
				Cancel: function() {
					$( this ).dialog( "close" );
				}
			}
		
		}).dialog( "open" );
	});	
}

/**
 * Sends the login and password to the Server with ajax request.
 * Checks the information returned by ajax to print the 
 * (or an error message if password or login was bad).
 * Calls the action connect
 * Uses the template "menuheader.html"
 * @function
 * @param {String} login The login typed by the user
 * @param {String} pass The password typed by the user
 */
function userConnect(login, pass) {
	$.ajax({ /* Sends login and pass to the server */
	 url: "?ajax=true&action=connect",
	 type: 'post',
	 data : "username=" + login + "&password=" + pass,
 	 error: function (data) { 
		  console.log(data);
	   
	  },
	 success :function (data) { /* Called on success */
	 console.log(data);
 		if (data == null) { 
 			logout(); 
 			return false; 
 		}
 		
		var saveData = data; /*User Data, if he is Admin: User Data + Hosts + Farms*/
 		
	 	if ( data['auth'] ) { /* If the user is connected */
	 		$connected = true;
	 		$.get('templates/menuheader.html', function(data) {
	 			$( "header" ).html( $.tmpl(data, saveData) );
	 			
 	 			$("#messages").html('<div id="connectMessage" class="ui-state-highlight ui-corner-all" style="margin-top: 20px;"> <p> Login Success !</p> </div>');
 	 			
 		 	 	$("#menu").append('<li id="adminMenu"><a href="#" onclick="userPage('+ saveData['userid'] + ')">user page</a></li>');
 		 		
 		 		if ( ! saveData['admin']) {
	 	 			$("#view").remove();
	 	 			$("#menu").append('<li><a href="#" id="seehosts" onclick="seeAllHostGroups()">My host groups</a></li>');
	 	 			$("#manage").remove();
					$("#generalSettings").remove();
					$("#scheduledTasks").remove();
					$("#schedule").remove();
					$("#ldapSettings").remove();
					$("#statSettings").remove();	
					$("#adminManual").remove();	
	 		 	}
	 		 	
	 		 	if (saveData['ldap']) {
					$("#changePass").remove();
					$("#settings").remove();	 		 	 		 		
	 		 	}
	 	 	
				$("#refreshPage").show();
				$("#settings").show();

	   	  	/* Calls the function to print the user page */ 
	  	   	userPage(saveData['userid']);
	     	});
	     
		} else {
	   	
	   	/* If the user is not authenticated */
	   	$('#content').append('<div id="connectError"> <div class="ui-state-error ui-corner-all" style="padding: 0 .7em;">' +
				'<p> Incorrect login or password </p> </div>'
			);
		
 		  	$("#connectError").dialog({
	   		autoOpen: false,
				resizable: false,
				height:180,
				modal: true,
				title: false,
				buttons: {
					"Try again": function() {
						$("#connect-form").dialog( "open" );
						$(this).dialog("close");
					},
					Cancel: function() {
						$(this).dialog("close");
					}
				}
			}).dialog( "open" );
 	 	}
   	
 	 },    
  	 dataType: 'json'
	});
}

/**
 * Sends the "logout" message to the server and prints a message to the user.
 * @function
 */
function logout () {
	deletePeriodicGetStatus();
	$.ajax({
	 url: "?ajax=true&action=logout",
	 type: 'post',
	 success :function (data) {
		$("#welcome").remove();
 	   $("#disconnect").remove();
		$('#content').html ('<div class="ui-state-error ui-corner-all" style="margin-top: 20px; padding: 0 .7em;"> <p> You are now disconnected !</p> </div>') ;
		$(".ui-state-error").delay(6000).hide(3000).append('<div id="recoButton"> <button onClick="reConnect()" > Connection to PHP-WOL </button></center>');
		$("button").button();
		$("#menu").html('<li><a href="#"></a></li>');
	 },
 	 dataType: 'json'
	});
}

/**
 * Opens the "connect" dialog window.
 * @function
 */
function reConnect(){
	$("#connect-form").dialog("open");
}

/**
 * Asks to the server the id of the current connected user and prints his userpage
 * Checks the information returned by ajax to print the userpage (or an error message if password or login was bad).
 * Calls the action getid
 * @function
 */
function userPageNoID() {
	$.ajax({
	  url: "?ajax=true&action=getid",
	  type: 'post',
	  success: function(data){
	  		if (data == null) { 
 				logout(); 
 				return false; 
 			}
  	 		userPage(data['id']);
	  },  
	  dataType: 'json'
	});
}

/**
 * Gets the list of hosts and farms and generates the userpage
 * Calls the action userpage
 * Uses the templates "hostsList.html", "farmsListHosts.html"
 * @function
 * @param {String} login The login typed by the user
 * @param {String} pass The password typed by the user
 */
function userPage (id) {
	deletePeriodicGetStatus();
	$.ajax({
	  url: "?ajax=true&action=userpage",
 	  type: 'post',
	  data: '&id=' + id,
	  
	  success: function(data){
	  		if (data == null) { 
 				logout();
 				return false; 
 			}
 			
			resetHostTab();

			$("#connectMessage").delay(3000).hide(2000);
			
			$("button").button();
			var hosts = data['hosts'];
			var farms = data['farms'];
			var saveData = data;

			$('#content').html('<div id=generalWrapper>').html('<div id=userHostsCol>').append('<div id=userFarmsCol>');	
			/* Prints the list of hosts */ 	
			 					
			$.get('templates/userPageHostsList.html', function(data) {
				$("#userHostsCol").html($.tmpl(data, saveData)); // Data = hostsList.html saveData = ObjetoInfo.
  				$('button').button();
 				$('.wolButton').hide();	
 				$('.turnOffButton').hide();
					 
 				for (var h in hosts) {
					getStatus(hosts[h].idH, "ho");
					add2tab (hosts[h].idH, "ho");
				}
			}); 
			
			/* Prints the list of farms, and for each farm, the list of hosts */	
			$.get('templates/userPageFarmsListHosts.html', function(data) {
			  
			var num_farms = saveData['farms'].length;
			
			for(var i=0 ; i<num_farms; i++){
			    saveData['farms'][i]['percent'] = saveData['farms'][i]['percent'].toFixed(2); //Para que no muestre 83,33333333333333 %
			}
			
		      $("#userFarmsCol").html( $.tmpl(data, saveData) );
			
    			$('button').button();
    			$('.wolButton').hide(); 	
  				$('.turnOffButton').hide();	
  			 			
    			for (var f in farms) {
					farms_hosts = farms[f].hostsinfarm;
					for (var fh in farms_hosts) {
						getStatus(farms_hosts[fh].idH, farms[f].id + "f");
						add2tab (farms_hosts[fh].idH, farms[f].id + "f");
					}
				}  			
			});
			
			runPeriodicGetStatus ();
			
  	  },
  	  dataType: 'json'
	});
}

/**
 * Gets the current page id (asking the server) and calls the server to refresh it
 * Calls the action getrefreshpage
 * @function
 */
function refresh() {
	deletePeriodicGetStatus();
	$.ajax({
	  url: "?ajax=true&action=getrefreshpage",
	  type: 'post',
	  success: function(data){
  	 		switch (data["page"]) {
  	 			case 'userpage': 
  	 				userPageNoID();
  	 			break;
  	 			case 'changePass' :
  	 				changePassword();
  	 			break;
  	 			case 'allfarms' :
  	 				seeAllFarms();
  	 			break;
  	 			case 'allhosts' :
  	 				seeAllHosts();
  	 			break;  	 	
  	 			case 'allhostgroups' :
  	 				seeAllHostGroups();
  	 			break;
  	 			case 'seelogs' :
  	 				seeLogs();
  	 			break;
  	 			case 'userGroups' :
  	 				usergroups(data["id"]);
  	 			break;	
  	 			case 'hostGroups' :
  	 				hostgroups(data["id"]);
  	 			break;	
  	 			case 'getFarms' :
  	 				farm(data["id"]);
  	 			break;	
  	 			case 'manageusers' :
  	 				manageUsers();
  	 			break;	
  	 			case 'managehosts' :
  	 				manageHosts();
  	 			break;	  	 			
  	 			case 'schedule' :
  	 				schedule();
  	 			break;
  	 			case 'manageperms' :
  	 				managePermissions();
  	 			break;
  	 			case 'managehostsofuser' :
  	 				manageHostsOfUser(data["id"]);
  	 			break;
  	 			case 'ldapconf' : 
  	 				ldapConfig(true);
  	 			break;
  	 			case 'viewinvit' :
  	 				manageInvits();
  	 			break;
  	 			case 'stats' :
  	 				seeAllStats();
  	 			break;
  	 			case 'statsconf' :
  	 				statSettings();
  	 			break;
  	 			case 'helpuser' :
  	 				helpUser();
  	 			break;
   	 		case 'helpadmin' : 	 			
 					helpAdmin();
 				break;
 				case 'helpsetupwol' :
 					helpSetupWol();
 				break;
   	 		case 'helpaboutonoff' : 	 			
 					helpAboutOnOff();
 				break;
 				case 'helpaboutwol' :
 					helpAboutWol();
 				break; 				
  	 			default: 
 					logout(); 
 				break;		
  	 		}
  	 		return false;
	  },  
	  dataType: 'json'
	});
}

/**
 * Gets the id of current user and prints a form to change his password.
 * Calls the actions setrefreshpage and getid
 * @function
 */
function changePassword() {
	$.ajax({
 		url: "?ajax=true&action=setrefreshpage",
 		type: 'post',
 		data: 'page=changePass'
	});
	$.ajax({
	  url: "?ajax=true&action=getid",
	  type: 'post',
	  success: function(data){
	  		if (data == null) { 
 				logout(); 
 				return false;
 			}
  	 		changePasswordId(data['id']);
			
	  },
	  dataType: 'json'
	});
}


/**
 * Prints a form to change the user's password.
 * Calls the actions changepass
 * Uses the template "changePasswordForm.html"
 * @function
 * @param {Number} id user id
 */
function changePasswordId (id) {
	deletePeriodicGetStatus();
	$.get('templates/changePasswordForm.html', function(data) {
		$('#content').html( $.tmpl(data, { "id" : id }) );
	  	
		$("#changeP").button();
		$("button").button();
	
		$("#formChangePass").submit(function() {  
  	 	  var current = $("input#current").val();
    	  var newPass = $("input#new").val();
    	  var confirm = $("input#confirm").val();
			var regexpPass = /^([0-9a-zA-Z])+$/;

   	   if ( (newPass.length < 3) || (newPass.length > 20) ) {
     		  	$(".ui-state-error").html('<p>Password must be between 3 and 20 chars </p>'); return false; 
     	 	} else if ( newPass != confirm ) {
       		$(".ui-state-error").html("<p>Password and confirmation do not match</p>"); return false; 
      	} else if (! regexpPass.test(newPass)) {
      	  	$(".ui-state-error").html("<p>Password may consist of letters and numbers</p>"); return false; 
      	} else {
      	  	$.ajax ({
       	 	 	url: "?ajax=true&action=changepass",
				 	type: 'post',
				 	data : "id=" + id + "&newPass=" + newPass,
				 	success : function (data) {
				 		if (data) {
				 			alert("Password successfully changed");
							userPage ();
						} else {
							alert("Sorry, an error occured. Probably you are not allowed to change your password.");	
						}
				 	},
		  		  	dataType: 'json'
        		});
        		$(".ui-state-error").html('');
        		return false; 
      	}
		});
	});    
}

/**
 * Asks the server to wake on an host, a farm or a group and prints a confirmation message in a dialog.
 * Calls the action wol
 * Uses the template "sentWol.html"
 * @function
 * @param {Number} id id of host, farm or group
 * @param {String} hname name of host, farm or group
 * @param {String} htype 3 values : 'host', 'farm' or 'group'
 */
function wakeOnLAN(id, hname, htype) {
	$.ajax({
 		url: "?ajax=true&action=wol",
 		type: 'post',
 		data : "&id=" + id + "&type=" + htype,
 		success :function (data) {
 			$.get('templates/sentWol.html', function(data) {
 				$( "#wolSend" ).remove();
 				$('#content').append( $.tmpl(data, {"hname" : hname, "htype" : htype}) );
				$( "#wolSend" ).dialog({
					autoOpen: false,
					resizable: false,
					height:300,
					width: 450,
					modal: true,
					buttons: {
						"Close": function() {
							$(this).dialog("close");
						},
					}
				}).dialog("open");
	 		});
 		},    
  		dataType: 'json'
	});
}

/**
 * Asks the server to turn off an host, a farm or a group and prints a confirmation message in a dialog.
 * Calls the action turnoff
 * Uses the template "sentTurnOff.html"
 * @function
 * @param {Number} id id of host, farm or group
 * @param {String} hname name of host, farm or group
 * @param {String} htype 3 values : 'host', 'farm' or 'group'
 */
function turnOff (id, hname, htype) {
	$.ajax({
 		url: "?ajax=true&action=turnoff",
 		type: 'post',
 		data : "&id=" + id + "&type=" + htype,
 		success :function (data) {
 			$.get('templates/sentTurnOff.html', function(data) {
 				$( "#turnOffSend" ).remove();
 				$('#content').append( $.tmpl(data, {"hname" : hname, "htype" : htype}) );
  				$( "#turnOffSend" ).dialog({
					autoOpen: false,
					resizable: false,
					height:300,
					width: 450,
					modal: true,
					buttons: {
						"Close": function() {
							$(this).dialog("close");
						},
					}
				}).dialog("open");
 			});
   	},    
  		dataType: 'json'
	});
}

/**
 * Prints the user help page
 * Uses the template "helpUser.html"
 * @function
 */
function helpUser() {
	deletePeriodicGetStatus();
	$.get('templates/helpUser.html', function(data) {
 		$('#content').html( $.tmpl(data, null) );
 		$.ajax({
 			url: "?ajax=true&action=setrefreshpage",
 			type: 'post',
 			data: 'page=helpuser'
		});
 	});	
 	return false;
}

/**
 * Prints the user help page
 * Uses the template "helpAdmin.html"
 * @function
 */
function helpAdmin() {
	deletePeriodicGetStatus();
	$.get('templates/helpAdmin.html', function(data) {
 		$('#content').html( $.tmpl(data, null) );
 		$.ajax({
 			url: "?ajax=true&action=setrefreshpage",
 			type: 'post',
 			data: 'page=helpadmin'
		});
 	});
 	return false;
}

/**
 * Prints the wol setup help page
 * Uses the template "helpSetupWol.html"
 * @function
 */
function helpSetupWol() {
	deletePeriodicGetStatus();
	$.get('templates/helpSetupWol.html', function(data) {
 		$('#content').html( $.tmpl(data, null) );
 		$.ajax({
 			url: "?ajax=true&action=setrefreshpage",
 			type: 'post',
 			data: 'page=helpsetupwol'
		});
 	});
 	return false;
}

/**
 * Prints the on/off about page
 * Uses the template "helpAboutOnOff.html"
 * @function
 */
function helpAboutOnOff() {
	deletePeriodicGetStatus();
	$.get('templates/helpAboutOnOff.html', function(data) {
 		$('#content').html( $.tmpl(data, null) );
 		$.ajax({
 			url: "?ajax=true&action=setrefreshpage",
 			type: 'post',
 			data: 'page=helpaboutonoff'
		});
 	});
 	return false;
}

/**
 * Prints the wol about page
 * Uses the template "helpAboutWol.html"
 * @function
 */
function helpAboutWol() {
	deletePeriodicGetStatus();
	$.get('templates/helpAboutWol.html', function(data) {
 		$('#content').html( $.tmpl(data, null) );
 		$.ajax({
 			url: "?ajax=true&action=setrefreshpage",
 			type: 'post',
 			data: 'page=helpaboutwol'
		});
 	});
 	return false;
}
		   	 			